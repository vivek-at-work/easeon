server {
    server_name www.easeon.in easeon.in;
    location = /favicon.ico { access_log off; log_not_found off; }
    location /django_static/ {
        #include  /etc/nginx/mime.types;
        root /home/easeon/production/easeon/EaseOn;

     }
    location /media/{
    root /home/easeon/production/easeon/EaseOn;
    }
    location /test/ {
   root /home/easeon/test/client;

    }
    location /backend/{
        include proxy_params;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        proxy_pass http://unix:/run/easeon.sock;
    }
    location /{
        root /home/easeon/production/client;
        index index.html;
        try_files $uri /index.html;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/easeon.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/easeon.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot







}
server {
    if ($host = www.easeon.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = easeon.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name www.easeon.in easeon.in;
    return 404; # managed by Certbot
}




# Upstreams
upstream dashboard_backend {
    server 127.0.0.1:6666;
}


server {
        listen 80;
        server_name dashboard.easeon.in;
        location / {
        proxy_pass http://dashboard_backend;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;
   }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/easeon.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/easeon.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


# Upstreams
upstream chat_backend {
    server 127.0.0.1:3000;
}
server {
    listen 80;
    server_name chat.easeon.in;

    # You can increase the limit if your need to.
    client_max_body_size 200M;

    error_log /var/log/nginx/rocketchat.access.log;

    location / {
        proxy_pass http://chat_backend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Nginx-Proxy true;

        proxy_redirect off;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/easeon.in/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/easeon.in/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
