# Generated by Django 2.2.13 on 2020-08-07 07:39

from django.db import migrations

SQL_DROP = """DROP VIEW public.easeon_ticket_reports"""
SQL_CREATE = """CREATE OR REPLACE VIEW public.easeon_ticket_reports AS
 SELECT 
    tickets_ticket.id,
    tickets_ticket.created_at,
    tickets_ticket.updated_at,
    tickets_ticket.status,
    tickets_ticket.coverage_type,
    tickets_ticket.repair_type,
    tickets_ticket.expected_service_cost,
    tickets_ticket.expected_hardware_cost,
    COALESCE(tickets_ticket.expected_service_cost , 0) + COALESCE(tickets_ticket.expected_hardware_cost, 0) total_expected ,
    ROUND(EXTRACT(EPOCH FROM tickets_ticket.expected_delivery_time-tickets_ticket.created_at)/3600) expected_tat_hours,
    ROUND(EXTRACT(EPOCH FROM tickets_ticket.closed_on - tickets_ticket.created_at)/3600) closing_hours,
    tickets_ticket.expected_delivery_time,
    tickets_ticket.reference_number,
    tickets_ticket.is_standby_device_required,
    tickets_ticket.first_escalation_after,
    tickets_ticket.second_escalation_after,
    tickets_ticket.final_escalation_after,
    tickets_ticket.closed_on,
    C.email as closed_by,
    A.email as created_by,
    B.email as assigned_to,
    tickets_ticket.customer_id,
    tickets_ticket.device_id,
    tickets_ticket.last_modified_by_id,
    organizations_organization.code
    FROM tickets_ticket 
    Left JOIN organizations_organization ON tickets_ticket.organization_id = organizations_organization.id 
    Left JOIN core_user A ON A.id = tickets_ticket.created_by_id
    Left join core_user B ON B.id = tickets_ticket.currently_assigned_to_id 
    Left join core_user C ON C.id = tickets_ticket.closed_by_id 
    WHERE tickets_ticket.is_deleted = False"""


class Migration(migrations.Migration):

    dependencies = [
        ('tickets', '0005_auto_20200513_0841'),
    ]

    operations = [migrations.RunSQL(SQL_CREATE, SQL_DROP)]
